// <auto-generated />
using EFCorePMC.FluentAPI.OnetoOneMapping;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCorePMC.DataAnnotation.OnetoOneMapping.Migrations
{
    [DbContext(typeof(FAPIOnetoOneDbContext))]
    [Migration("20201208090602_TablePerConcrete1")]
    partial class TablePerConcrete1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("CustomerId")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("FirstName");

                    b.Property<int?>("Gender")
                        .HasColumnType("INT")
                        .HasColumnName("Gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("LastName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.CustomerRequisite", b =>
                {
                    b.Property<int>("CustomerRequisiteId")
                        .HasColumnType("INT")
                        .HasColumnName("CustomerId");

                    b.Property<string>("IdProof")
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR(25)")
                        .HasColumnName("IdProof");

                    b.Property<int?>("IdProofType")
                        .HasColumnType("INT")
                        .HasColumnName("IdProofType");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("MobileNum");

                    b.HasKey("CustomerRequisiteId");

                    b.ToTable("CustomerRequisite");
                });

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.GeneralCustomer", b =>
                {
                    b.HasBaseType("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.Customer");

                    b.Property<decimal>("Credits")
                        .HasColumnType("MONEY")
                        .HasColumnName("Credits");

                    b.Property<string>("NormalCoupon")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("NormalCoupon");

                    b.ToTable("GeneralCustomer");
                });

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.RegularCustomer", b =>
                {
                    b.HasBaseType("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.Customer");

                    b.Property<decimal>("AdvCredits")
                        .HasColumnType("MONEY")
                        .HasColumnName("AdvCredits");

                    b.Property<string>("Perks")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("Perks");

                    b.ToTable("RegularCustomer");
                });

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.CustomerRequisite", b =>
                {
                    b.HasOne("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.Customer", "Customer")
                        .WithOne("CustomerRequisites")
                        .HasForeignKey("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.CustomerRequisite", "CustomerRequisiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.GeneralCustomer", b =>
                {
                    b.HasOne("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.Customer", null)
                        .WithOne()
                        .HasForeignKey("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.GeneralCustomer", "CustomerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.RegularCustomer", b =>
                {
                    b.HasOne("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.Customer", null)
                        .WithOne()
                        .HasForeignKey("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.RegularCustomer", "CustomerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCorePMC.DataAnnotation.OnetoOneMapping.Models.Customer", b =>
                {
                    b.Navigation("CustomerRequisites");
                });
#pragma warning restore 612, 618
        }
    }
}
