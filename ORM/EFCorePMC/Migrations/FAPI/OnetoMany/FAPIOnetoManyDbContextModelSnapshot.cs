// <auto-generated />
using EFCorePMC.FluentAPI.OnetoManyMapping;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCorePMC.Migrations.FAPI
{
    [DbContext(typeof(FAPIManytoManyDbContext))]
    partial class FAPIOnetoManyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EFCorePMC.FluentAPI.OnetoManyMapping.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("CustomerId")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("FirstName");

                    b.Property<int?>("Gender")
                        .HasColumnType("INT")
                        .HasColumnName("Gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("LastName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("EFCorePMC.FluentAPI.OnetoManyMapping.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("OrderId")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerRefId")
                        .HasColumnType("INT");

                    b.Property<decimal>("DeliveryCharge")
                        .HasColumnType("MONEY")
                        .HasColumnName("DeliveryCharge");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("MONEY")
                        .HasColumnName("TaxAmount");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerRefId");

                    b.ToTable("CustomerOrder");
                });

            modelBuilder.Entity("EFCorePMC.FluentAPI.OnetoManyMapping.Models.Order", b =>
                {
                    b.HasOne("EFCorePMC.FluentAPI.OnetoManyMapping.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EFCorePMC.FluentAPI.OnetoManyMapping.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
